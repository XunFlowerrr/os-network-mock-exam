[
  {
    "question": "1. Which of the following best describes the transport layer's primary goal in the Internet protocol stack?",
    "options": [
      "A. Providing logical communication between two processes on different hosts",
      "B. Routing data packets through intermediate routers",
      "C. Translating IP addresses to MAC addresses",
      "D. Handling physical transmission errors on the medium"
    ],
    "answer": 0,
    "explanation": "The transport layer creates a logical end-to-end communication channel between application processes on different hosts. Options B, C, and D are associated with lower layers (network layer for routing, ARP at the link layer for address translation, and physical layer for transmission errors)."
  },
  {
    "question": "2. Which of these is a key function of the transport layer?",
    "options": [
      "A. Address resolution between IP and MAC addresses",
      "B. Error detection and flow control between end systems",
      "C. Physical signal modulation",
      "D. Routing across autonomous systems"
    ],
    "answer": 1,
    "explanation": "Error detection (via checksums) and flow control (managing the sender's rate to avoid overwhelming the receiver) are essential transport-layer functions. Address resolution is a link-layer function, signal modulation is physical-layer, and routing is handled by the network layer."
  },
  {
    "question": "3. In the context of multiplexing and demultiplexing, the transport layer uses which fields to direct incoming segments to the correct socket?",
    "options": [
      "A. IP addresses only",
      "B. IP addresses and port numbers",
      "C. MAC addresses and IP addresses",
      "D. Sequence numbers only"
    ],
    "answer": 1,
    "explanation": "The transport layer relies on both source/destination IP addresses and source/destination port numbers to identify the correct receiving socket. IP addresses alone are not sufficient; MAC addresses and sequence numbers are used for different purposes."
  },
  {
    "question": "4. Which of the following is a characteristic of UDP (User Datagram Protocol)?",
    "options": [
      "A. It guarantees in-order delivery of segments",
      "B. It offers congestion control by default",
      "C. It provides best-effort, connectionless delivery",
      "D. It requires a three-way handshake for connection setup"
    ],
    "answer": 2,
    "explanation": "UDP is a connectionless, best-effort transport protocol with minimal overhead. It does not guarantee in-order delivery, does not provide built-in congestion control, and does not use a three-way handshake (that is TCP's feature)."
  },
  {
    "question": "5. Why might an application choose to use UDP over TCP?",
    "options": [
      "A. It requires guaranteed delivery and wants flow control",
      "B. It demands minimal overhead and can tolerate some loss",
      "C. It needs the largest possible sequence numbers",
      "D. It must ensure the order of segments is strictly preserved"
    ],
    "answer": 1,
    "explanation": "UDP is often selected for applications that can handle some packet loss and want the lowest latency or overhead, such as streaming or real-time services. Options A and D describe TCP-like features, and option C is unrelated to protocol choice."
  },
  {
    "question": "6. In the UDP segment header, what is the purpose of the checksum?",
    "options": [
      "A. To control flow so the sender never overwhelms the receiver",
      "B. To detect bit errors in the transmitted segment",
      "C. To reorder packets at the receiver",
      "D. To indicate a guaranteed delivery mechanism"
    ],
    "answer": 1,
    "explanation": "The UDP checksum is used to detect bit-level errors in the segment. Flow control, reordering, and guaranteed delivery are features generally associated with TCP or other mechanisms."
  },
  {
    "question": "7. In a reliable data transfer protocol, acknowledgments (ACKs) are used primarily to:",
    "options": [
      "A. Notify the receiver about upcoming packets",
      "B. Inform the sender that a packet was received correctly",
      "C. Create a secure channel for data encryption",
      "D. Fragment larger packets into smaller ones"
    ],
    "answer": 1,
    "explanation": "ACKs are sent by the receiver to inform the sender of successful reception. Encryption and fragmentation are unrelated to simple acknowledgment procedures."
  },
  {
    "question": "8. In the context of stop-and-wait protocols (like rdt3.0), what triggers the sender to retransmit the last packet?",
    "options": [
      "A. Receiving an ACK with the correct sequence number",
      "B. A timer expiration (timeout) before an ACK arrives",
      "C. The arrival of a different packet from a new stream",
      "D. A special signal from the transport layer"
    ],
    "answer": 1,
    "explanation": "In stop-and-wait, if no ACK is received within the timeout period, the sender retransmits. ACK arrival would prevent retransmission, and the other options are not typical triggers."
  },
  {
    "question": "9. In a pipelined protocol such as Go-Back-N, the sender:",
    "options": [
      "A. Can only have one outstanding unacknowledged packet at a time",
      "B. Must receive ACKs for every byte rather than every packet",
      "C. Can send multiple packets before receiving acknowledgments",
      "D. Will never require a retransmission due to timeouts"
    ],
    "answer": 2,
    "explanation": "Go-Back-N is a pipelined protocol allowing multiple unacknowledged packets in flight. Stop-and-wait (option A) only allows one unacknowledged packet. Options B and D are incorrect for typical GBN design."
  },
  {
    "question": "10. How does Selective Repeat (SR) differ from Go-Back-N?",
    "options": [
      "A. SR retransmits the entire window on detecting a single loss",
      "B. SR sends only one packet at a time, strictly in order",
      "C. SR can individually acknowledge and buffer out-of-order packets",
      "D. SR uses negative acknowledgment (NAK) exclusively"
    ],
    "answer": 2,
    "explanation": "Selective Repeat allows the receiver to accept and buffer out-of-order packets, acknowledging each one individually. Go-Back-N retransmits all packets from the loss point onward."
  },
  {
    "question": "11. In TCP, the sequence number in the segment header represents:",
    "options": [
      "A. The number of retransmissions performed",
      "B. The application\u00e2\u20ac\u2122s port number",
      "C. The byte offset of the first data byte in the segment",
      "D. The total number of bytes remaining to be sent"
    ],
    "answer": 2,
    "explanation": "TCP uses the sequence number to indicate the byte offset (relative to the initial sequence number) of the first data byte in that segment. Options A, B, and D do not correctly define TCP sequence numbers."
  },
  {
    "question": "12. What happens to the TCP congestion window (cwnd) during the slow start phase?",
    "options": [
      "A. It remains constant until a threshold is reached",
      "B. It doubles every RTT until a loss event or threshold limit occurs",
      "C. It decreases linearly for each duplicate ACK received",
      "D. It remains at 1 MSS throughout the connection"
    ],
    "answer": 1,
    "explanation": "During slow start, TCP increases cwnd exponentially (doubling it each RTT) until a specified threshold is reached or a loss occurs. This rapid growth is known as the slow start phase."
  },
  {
    "question": "13. In TCP congestion control, a triple-duplicate ACK typically triggers:",
    "options": [
      "A. Immediate transition to slow start with cwnd = 1",
      "B. A flow-control adjustment by the receiver",
      "C. Fast retransmit and fast recovery phases",
      "D. A reset of the connection"
    ],
    "answer": 2,
    "explanation": "When TCP sees triple-duplicate ACKs, it performs a fast retransmit (resending the lost segment) and then enters fast recovery instead of dropping the cwnd to 1 as in a timeout-based loss."
  },
  {
    "question": "14. TCP flow control ensures that:",
    "options": [
      "A. The total number of active connections is minimized",
      "B. A sender does not overwhelm the receiver\u00e2\u20ac\u2122s buffer capacity",
      "C. The sender never changes its sending rate once a connection is established",
      "D. The network remains free of congestion"
    ],
    "answer": 1,
    "explanation": "Flow control is specifically to prevent the sender from sending data faster than the receiver can handle, using the receiver window (rwnd). Options A, C, and D address different aspects of traffic regulation."
  },
  {
    "question": "15. In TCP\u00e2\u20ac\u2122s three-way handshake, which control flag typically starts the connection setup?",
    "options": [
      "A. SYN",
      "B. ACK",
      "C. FIN",
      "D. RST"
    ],
    "answer": 0,
    "explanation": "A TCP connection starts with a SYN flag from the client to the server, prompting a SYN-ACK response from the server, followed by a final ACK from the client."
  },
  {
    "question": "16. Which of the following is not a possible cause of congestion in a network?",
    "options": [
      "A. Having infinite buffers in routers",
      "B. Packets arriving faster than link capacity can handle",
      "C. Too many sources sending large amounts of data simultaneously",
      "D. Flow control misconfiguration at the receiving application"
    ],
    "answer": 0,
    "explanation": "Infinite buffering might add queuing delay but does not directly cause congestion collapse. Congestion arises from excessive traffic relative to network capacity. Flow control issues are local, not the main cause of widespread network congestion."
  },
  {
    "question": "17. Which statement about congestion control and flow control is correct?",
    "options": [
      "A. Both are synonyms for the same mechanism",
      "B. Congestion control prevents a sender from overwhelming the receiver\u00e2\u20ac\u2122s buffer",
      "C. Flow control aims to limit the overall load on the network",
      "D. Flow control addresses the receiver\u00e2\u20ac\u2122s capacity, while congestion control addresses the network\u00e2\u20ac\u2122s capacity"
    ],
    "answer": 3,
    "explanation": "Flow control keeps the sender from overwhelming the receiver\u00e2\u20ac\u2122s buffer. Congestion control deals with limiting the total sending rate to avoid saturating the network."
  },
  {
    "question": "18. A key motivation behind the switch to IPv6 was:",
    "options": [
      "A. The requirement for smaller addresses and simpler headers",
      "B. The exhaustion of 32-bit IPv4 addresses",
      "C. To reduce packet overhead by eliminating all addresses",
      "D. To standardize on NAT as a mandatory feature"
    ],
    "answer": 1,
    "explanation": "IPv4 addresses (32-bit) were running out, leading to the development of IPv6 with 128-bit addresses. IPv6 does not eliminate addresses, nor does it mandate NAT. Option A is incorrect; IPv6 headers are not smaller addresses but bigger addresses."
  },
  {
    "question": "19. In the context of TCP\u00e2\u20ac\u2122s AIMD (Additive Increase, Multiplicative Decrease) algorithm, how does the congestion window (cwnd) evolve when no loss is detected?",
    "options": [
      "A. It increases linearly",
      "B. It decreases linearly",
      "C. It remains constant",
      "D. It immediately doubles every RTT"
    ],
    "answer": 0,
    "explanation": "In the congestion-avoidance phase, TCP uses additive increase (a linear increment). Option D describes slow start's exponential growth, not the AIMD congestion avoidance."
  },
  {
    "question": "20. Which of the following best describes the role of the TCP checksum?",
    "options": [
      "A. It is used for flow control to limit the sending rate",
      "B. It is used to detect errors in the TCP header and data",
      "C. It is used to determine the correct destination IP address",
      "D. It is used to reorder segments arriving out of sequence"
    ],
    "answer": 1,
    "explanation": "The TCP checksum is used to detect bit errors in the segment\u00e2\u20ac\u2122s header and data fields. Flow control is handled by rwnd, IP addresses are in the IP header, and reordering is done by sequence numbers but not by the checksum."
  },
  {
    "question": "21. In a scenario where multiple TCP flows share a single bottleneck link, TCP tends to share the link fairly because:",
    "options": [
      "A. All flows have the exact same RTT",
      "B. Fastest flows immediately stop sending",
      "C. The AIMD algorithm will reduce the sending rate upon loss, encouraging fairness",
      "D. Each sender is using a different port"
    ],
    "answer": 2,
    "explanation": "AIMD gradually increases the sending rate until loss is detected, then cuts the window, preventing one flow from monopolizing the link. Equal RTT or different ports do not guarantee fairness alone."
  },
  {
    "question": "22. Which of the following statements about UDP is false?",
    "options": [
      "A. It provides multiplexing and demultiplexing with port numbers",
      "B. It includes error detection via a checksum",
      "C. It handles out-of-order data by buffering at the receiver",
      "D. It is a connectionless transport-layer protocol"
    ],
    "answer": 2,
    "explanation": "UDP does not include a mechanism for reordering or buffering out-of-order segments. It is connectionless, uses port numbers for mux/demux, and has an optional checksum for error detection."
  },
  {
    "question": "23. During TCP\u00e2\u20ac\u2122s three-way handshake, if the client sends a SYN and receives no response from the server before timeout, the client typically:",
    "options": [
      "A. Terminates the connection immediately",
      "B. Initiates slow start with cwnd = 2 MSS",
      "C. Retransmits the SYN",
      "D. Closes the port to any new connections"
    ],
    "answer": 2,
    "explanation": "If a SYN is not acknowledged, the client resends the SYN after a timeout (exponential backoff). Terminating immediately is not standard behavior, nor does it jump to slow start with cwnd=2 without receiving an ACK."
  },
  {
    "question": "24. Which of these transport-layer mechanisms is typically used to signal the sender about network congestion in TCP?",
    "options": [
      "A. The urgent pointer",
      "B. The receive window (rwnd)",
      "C. Triple-duplicate ACKs and timeouts",
      "D. The source port number"
    ],
    "answer": 2,
    "explanation": "When TCP experiences multiple duplicate ACKs or a timeout, it infers congestion or packet loss. The urgent pointer is for urgent data, rwnd is for flow control at the receiver, and port numbers are for addressing."
  },
  {
    "question": "25. When considering fast retransmit in TCP, the primary indication used by the sender to deduce that a packet is lost is:",
    "options": [
      "A. A repeated urgent pointer field",
      "B. Receiving at least three duplicate ACKs",
      "C. A sudden drop in the receiver\u00e2\u20ac\u2122s advertised window",
      "D. A special bit in the IP header"
    ],
    "answer": 1,
    "explanation": "Fast retransmit is triggered by three (or more) duplicate ACKs for the same sequence number, signifying likely segment loss. The other options are unrelated to fast retransmit."
  },
  {
    "question": "26. The principle behind flow control in TCP is:",
    "options": [
      "A. Ensuring the network as a whole is not overloaded",
      "B. Providing guaranteed in-order packet delivery",
      "C. Preventing the receiver\u00e2\u20ac\u2122s buffer from overflowing",
      "D. Utilizing the maximum possible throughput on every link"
    ],
    "answer": 2,
    "explanation": "Flow control is about matching the sender\u00e2\u20ac\u2122s sending rate to the receiver\u00e2\u20ac\u2122s capacity. Congestion control handles the network's capacity (A), while in-order delivery (B) is enforced by sequence numbers and buffers."
  },
  {
    "question": "27. Which of the following describes the RST flag in TCP?",
    "options": [
      "A. It is used to terminate a connection gracefully",
      "B. It indicates a request to reset the connection immediately",
      "C. It sets the congestion window to zero",
      "D. It is part of the three-way handshake"
    ],
    "answer": 1,
    "explanation": "The RST flag forcibly resets a connection if something goes wrong. FIN is for graceful termination, and RST is not used in normal three-way handshakes."
  },
  {
    "question": "28. A host using UDP to send streaming data at a high rate may:",
    "options": [
      "A. Automatically adapt its sending rate when congestion is detected",
      "B. Lose packets if the network is congested but continue sending at the same speed",
      "C. Perform reliable retransmissions on each lost packet",
      "D. Trigger TCP congestion control if too many losses occur"
    ],
    "answer": 1,
    "explanation": "UDP does not implement congestion control by default; it will keep sending even under congestion, resulting in dropped packets. Options A, C, and D are TCP behaviors."
  },
  {
    "question": "29. In the context of TCP\u00e2\u20ac\u2122s timeout, why is an adaptive timeout mechanism (using EstimatedRTT and DevRTT) important?",
    "options": [
      "A. It ensures the TCP checksum is accurate",
      "B. It reduces the need for flow control",
      "C. It adapts to varying RTTs to avoid spurious or delayed retransmissions",
      "D. It blocks the application until all data is acknowledged"
    ],
    "answer": 2,
    "explanation": "TCP's adaptive timeout, based on EstimatedRTT and DevRTT, helps it dynamically adjust to changes in network delay. This avoids spurious timeouts or overly long waiting, which hamper performance."
  },
  {
    "question": "30. In TCP Tahoe, which event causes the congestion window to be reset to one MSS?",
    "options": [
      "A. Every received ACK",
      "B. A triple-duplicate ACK",
      "C. Any detected packet reordering",
      "D. A timeout event"
    ],
    "answer": 3,
    "explanation": "TCP Tahoe sets cwnd to 1 MSS on a timeout event. For triple-duplicate ACK, TCP Tahoe also reduces cwnd drastically, but the key feature is that a timeout always forces slow start in Tahoe."
  },
  {
    "question": "31. Which factor is not a cause of congestion in a network according to the provided text?",
    "options": [
      "A. Packet loss due to full queues",
      "B. Large bandwidth-delay products in the channel",
      "C. Retransmissions caused by packet timeouts",
      "D. Sufficient buffer space for every packet"
    ],
    "answer": 3,
    "explanation": "Having sufficient buffer space alone does not cause congestion; in fact, insufficient or finite buffering can lead to drops. Large bandwidth-delay products can lead to many packets in flight, contributing to congestion if not managed, while retransmissions also add to the problem."
  },
  {
    "question": "32. When a TCP segment carrying an urgent pointer arrives at the receiver, it indicates:",
    "options": [
      "A. The start of slow start",
      "B. The presence of high-priority data that should be expedited",
      "C. That the segment must be dropped immediately",
      "D. That the connection is being reset"
    ],
    "answer": 1,
    "explanation": "The urgent pointer in TCP flags the receiver to handle the segment\u00e2\u20ac\u2122s data with higher priority. It does not signal slow start, dropping, or resetting the connection."
  },
  {
    "question": "33. The main purpose of the TCP persist timer is to:",
    "options": [
      "A. Avoid the silly window syndrome by periodically probing the receiver window",
      "B. Ensure triple-duplicate ACK detection",
      "C. Restart slow start after idle time",
      "D. Terminate connections that have run out of sequence numbers"
    ],
    "answer": 0,
    "explanation": "The persist timer triggers the sender to probe the receiver\u00e2\u20ac\u2122s window size to prevent a deadlock when rwnd is zero. Other options are unrelated to the persist timer."
  },
  {
    "question": "34. In a data center environment, load balancing is often performed at which layer?",
    "options": [
      "A. Physical layer",
      "B. Network layer",
      "C. Transport layer (possibly with specialized middleboxes)",
      "D. Application layer only"
    ],
    "answer": 2,
    "explanation": "Load balancers can operate at the transport layer, managing TCP connections to distribute incoming traffic among servers. They can also have application-layer intelligence, but commonly appear as transport-layer middleboxes."
  },
  {
    "question": "35. Which statement about QUIC, a newer transport protocol, is true according to the text?",
    "options": [
      "A. It offers no congestion control mechanisms",
      "B. It is built on top of UDP for faster connection establishment",
      "C. It replaces IP at the network layer",
      "D. It uses a three-way handshake identical to TCP"
    ],
    "answer": 1,
    "explanation": "QUIC runs on top of UDP to achieve quick handshake and flexible congestion control. It does not replace IP (a network-layer protocol) and does provide congestion control features."
  },
  {
    "question": "36. Regarding TCP CUBIC, what is its main improvement over classic TCP Reno?",
    "options": [
      "A. It reduces the window only after every other ACK",
      "B. It uses a strictly linear increase of cwnd at all times",
      "C. It aims for faster window growth after a loss, then slows near Wmax",
      "D. It does not react to timeouts at all"
    ],
    "answer": 2,
    "explanation": "TCP CUBIC quickly ramps up cwnd after a loss until approaching the previous maximum window (Wmax), then more gently increases to avoid overshooting. Option B is normal congestion avoidance, not CUBIC."
  },
  {
    "question": "37. In the context of the Internet, which statement about the end-to-end argument is correct?",
    "options": [
      "A. It suggests implementing reliability and intelligence primarily in the core network",
      "B. It argues that certain transport-layer functions are best placed at the network edges (hosts)",
      "C. It requires that network devices always reorder packets",
      "D. It mandates that routers perform NAT functions by default"
    ],
    "answer": 1,
    "explanation": "The end-to-end argument says many functions, including reliability and error recovery, are best handled end-to-end by the hosts rather than by the network core. The other choices are incorrect interpretations."
  },
  {
    "question": "38. A typical reason for using a firewall middlebox at the transport layer is to:",
    "options": [
      "A. Manage physical-layer waveforms",
      "B. Provide NAT functionality for address depletion",
      "C. Filter or block undesired traffic to protect internal networks",
      "D. Enforce VLAN tagging on frames"
    ],
    "answer": 2,
    "explanation": "Firewalls inspect transport- and network-layer fields to allow or block traffic. NAT addresses address translation, VLAN tagging is link-layer, and waveforms are physical-layer tasks."
  },
  {
    "question": "39. One benefit of deploying a data-plane middlebox might be:",
    "options": [
      "A. A universal replacement of IP with MPLS",
      "B. Increased latency for all traffic by design",
      "C. Offloading specialized network functions (e.g., NAT, firewall) from end hosts",
      "D. Restricting all connections to a single transport protocol"
    ],
    "answer": 2,
    "explanation": "A middlebox can perform specialized tasks like NAT or firewall filtering, reducing the burden on end systems. They are not meant to intentionally increase latency or force a single transport protocol."
  },
  {
    "question": "40. Which scenario best illustrates a scenario requiring flow control rather than congestion control?",
    "options": [
      "A. The sender is sending too quickly, causing the receiver\u00e2\u20ac\u2122s buffer to overflow",
      "B. Multiple TCP flows saturate a bottleneck link in the network core",
      "C. Packet losses occur due to limited router queue capacity",
      "D. The network has a high round-trip time and large bandwidth"
    ],
    "answer": 0,
    "explanation": "Flow control deals with preventing the sender from overwhelming the receiver\u00e2\u20ac\u2122s buffer. Options B and C highlight congestion control in the network. Option D is about bandwidth-delay product considerations, not directly flow control."
  },
  {
    "question": "41. In the network layer, forwarding is best defined as:",
    "options": [
      "A. The process of planning an end-to-end route from source to destination",
      "B. Moving a packet from an input port to the correct output port in a single router",
      "C. Translating MAC addresses to IP addresses",
      "D. Providing guaranteed delivery for segments"
    ],
    "answer": 1,
    "explanation": "Forwarding (data-plane action) moves the packet inside a router from input to output. Planning the route is routing (control plane). MAC-IP translation is link-layer/ARP, and guaranteed delivery is a transport concern."
  },
  {
    "question": "42. Which of the following is an accurate description of the difference between the data plane and control plane?",
    "options": [
      "A. The data plane is implemented in software, while the control plane is hardware-based",
      "B. The data plane handles per-packet forwarding, while the control plane decides how routing tables are built",
      "C. The data plane handles routing algorithms, and the control plane moves packets at line speed",
      "D. They are synonymous terms used interchangeably"
    ],
    "answer": 1,
    "explanation": "The data plane is responsible for packet-level forwarding inside the router, while the control plane runs routing protocols (or SDN logic) to build/maintain the forwarding tables."
  },
  {
    "question": "43. In a router\u00e2\u20ac\u2122s input port, the reason for queuing might be:",
    "options": [
      "A. The switch fabric is overloaded or not ready to accept the packet",
      "B. The router has no routing table entries",
      "C. The router is in slow-start phase",
      "D. The router is performing NAT"
    ],
    "answer": 0,
    "explanation": "If the switch fabric or the output port is congested, packets queue at the input. NAT is not specifically related to input queuing, nor are routing table entries or slow-start relevant at the input port level."
  },
  {
    "question": "44. Which switching fabric approach uses a shared single bus to transfer packets from input to output?",
    "options": [
      "A. Memory-based switching",
      "B. Crossbar switching",
      "C. Bus-based switching",
      "D. Packet-based scheduling"
    ],
    "answer": 2,
    "explanation": "Bus-based switching uses a single shared bus. Memory-based switching uses CPU and memory, while crossbar is an interconnection network with multiple concurrent paths, and packet scheduling is a separate concept."
  },
  {
    "question": "45. Head-of-line (HOL) blocking occurs when:",
    "options": [
      "A. A router\u00e2\u20ac\u2122s output buffer is completely full",
      "B. A packet at the front of the input queue prevents others behind it from advancing",
      "C. The routing table is missing an entry for a destination",
      "D. A link experiences a physical-layer failure"
    ],
    "answer": 1,
    "explanation": "HOL blocking arises in input-queued routers where the packet at the front of the queue is blocked, preventing others behind it from reaching the switch fabric. Full output buffers can cause output queuing but not HOL blocking specifically."
  },
  {
    "question": "46. The length of an IP datagram can be up to 64 KB. When the payload must be split to fit an MTU on a network link, the process is called:",
    "options": [
      "A. Reassembly",
      "B. Encapsulation",
      "C. Fragmentation",
      "D. Multiplexing"
    ],
    "answer": 2,
    "explanation": "IP fragmentation occurs when a large IP datagram is split into smaller fragments to fit the link MTU. Reassembly is done at the destination. Encapsulation is different, and multiplexing is typically at the transport layer."
  },
  {
    "question": "47. In the IPv4 header, the TTL (Time to Live) field:",
    "options": [
      "A. Specifies the maximum amount of time a packet can spend in queues",
      "B. Decrements at each hop and prevents indefinite forwarding loops",
      "C. Indicates the number of bytes in the IP payload",
      "D. Is used to track the fragmentation offset"
    ],
    "answer": 1,
    "explanation": "TTL is reduced by one at every router hop, discarding the packet if TTL hits zero. This prevents infinite looping. It is not the byte count, nor does it track fragmentation offset."
  },
  {
    "question": "48. An IP address 192.168.0.15/24 indicates:",
    "options": [
      "A. A subnet mask of 255.255.255.0, with 192.168.0 as the network part",
      "B. A subnet mask of 255.255.0.0, with 192.168 as the network part",
      "C. That 192.168.0.15 is a link-local address only",
      "D. A direct broadcast address for the 192.168.0.0 network"
    ],
    "answer": 0,
    "explanation": "/24 means the first 24 bits (255.255.255.0) is the network portion. 192.168.0.x is typical private IP range, but 192.168.0.15 is not a broadcast address. Option C is incorrect because link-local is usually 169.254.x.x."
  },
  {
    "question": "49. CIDR (Classless InterDomain Routing) introduced which key improvement?",
    "options": [
      "A. Fixed-size subnet blocks of /24 only",
      "B. Flexible subnet masks, written as a.b.c.d/x",
      "C. Segregating networks into strictly Class A, B, or C",
      "D. Abolishing hierarchical IP addressing"
    ],
    "answer": 1,
    "explanation": "CIDR uses variable-length subnet masks and notation a.b.c.d/x. It moves away from the strict classes (A, B, C) and supports hierarchies via address aggregation."
  },
  {
    "question": "50. Which of the following does DHCP not typically provide to the client?",
    "options": [
      "A. The client\u00e2\u20ac\u2122s IP address lease",
      "B. The DNS server\u00e2\u20ac\u2122s IP address",
      "C. The MAC address of the default gateway",
      "D. The IP address of the default gateway"
    ],
    "answer": 2,
    "explanation": "DHCP can provide the client\u00e2\u20ac\u2122s IP, DNS server, default gateway IP, etc. It does not provide the MAC address of the gateway; that can be obtained via ARP locally."
  },
  {
    "question": "51. What is the purpose of the NAT (Network Address Translation) table in a NAT router?",
    "options": [
      "A. To hold a list of IP addresses that are unreachable",
      "B. To store port mappings between local private addresses and the external public IP address",
      "C. To manage flow control for all LAN devices",
      "D. To function as a default gateway for all routers in the Internet"
    ],
    "answer": 1,
    "explanation": "A NAT table keeps track of private IP/port to public IP/port translations. It doesn\u00e2\u20ac\u2122t store unreachable addresses or manage flow control, and it\u00e2\u20ac\u2122s not the global default gateway."
  },
  {
    "question": "52. One common motivation to use NAT in home networks is:",
    "options": [
      "A. The need for a globally routable IPv6 address",
      "B. To reduce overhead of fragmentation in the IPv4 header",
      "C. IPv4 address scarcity, allowing many private IP devices behind one public IP",
      "D. Guaranteeing in-order delivery of segments"
    ],
    "answer": 2,
    "explanation": "NAT lets multiple local hosts share a single public IP, mitigating IPv4 scarcity. The other options are unrelated or incorrect with respect to NAT\u00e2\u20ac\u2122s function."
  },
  {
    "question": "53. In IPv6, the extension headers replace or reorganize which IPv4 features?",
    "options": [
      "A. MAC address resolution",
      "B. Options field for additional functionalities",
      "C. ARP for interface resolution",
      "D. Urgent pointers in the transport header"
    ],
    "answer": 1,
    "explanation": "IPv6 extension headers handle optional features that were part of the IPv4 options field. MAC resolution is done by NDP (replacing ARP), not by IPv6 extension headers."
  },
  {
    "question": "54. Tunneling of IPv6 packets inside IPv4 means:",
    "options": [
      "A. IPv6 addresses are used by the network, but a NAT device modifies them",
      "B. IPv6 datagrams are encapsulated as payload in an IPv4 datagram for transport over IPv4 networks",
      "C. IPv4 addresses are replaced by IPv6 in the router\u00e2\u20ac\u2122s ARP cache",
      "D. The router always fragments the IPv6 packets to fit IPv4"
    ],
    "answer": 1,
    "explanation": "Tunneling puts the entire IPv6 packet inside an IPv4 packet to traverse IPv4-only segments. NAT or fragmentation is distinct from typical tunneling behavior."
  },
  {
    "question": "55. Which statement is true regarding IPv6 adoption?",
    "options": [
      "A. Most global traffic fully migrated to IPv6 by 2005",
      "B. It is gradually increasing, with partial deployments worldwide",
      "C. IPv6 was abandoned for a new standard in 2010",
      "D. IPv6 uses the same 32-bit addressing scheme but in decimal"
    ],
    "answer": 1,
    "explanation": "IPv6 adoption is gradual, with many networks partially deployed. It was not abandoned, uses 128-bit addresses (not 32-bit decimal), and the global transition is still ongoing."
  },
  {
    "question": "56. At which point does IP reassembly of fragments typically occur?",
    "options": [
      "A. At the first router in the path",
      "B. At the sender immediately after fragmentation",
      "C. At the final receiving host",
      "D. At every router the datagram traverses"
    ],
    "answer": 2,
    "explanation": "IP fragments are reassembled by the destination host to avoid repeated re-fragmentation or partial reassembly at each router. Thus, the final host is responsible for reassembly."
  },
  {
    "question": "57. The main advantage of hierarchical IP addressing (CIDR) for the global Internet is:",
    "options": [
      "A. It allows direct broadcasting to all subnets at once",
      "B. It simplifies IP address allocation by ignoring any hierarchy",
      "C. It enables route aggregation, reducing the size of routing tables",
      "D. It prevents the creation of subnets smaller than /24"
    ],
    "answer": 2,
    "explanation": "CIDR enables hierarchical structure so ISPs can advertise aggregated routes, greatly reducing the global routing table size. It does not prevent smaller subnets or ignore hierarchy."
  },
  {
    "question": "58. In the data plane, a router\u00e2\u20ac\u2122s main function is:",
    "options": [
      "A. Running dynamic routing protocols to build global topology",
      "B. Examining incoming packets and forwarding them based on the forwarding table",
      "C. Managing application-layer encryption keys",
      "D. Performing DNS lookups for client hosts"
    ],
    "answer": 1,
    "explanation": "Data-plane functionality deals with forwarding packets using the router\u00e2\u20ac\u2122s forwarding table. The other tasks (routing protocols, encryption, DNS) are outside the typical data-plane forwarding function."
  },
  {
    "question": "59. In a router architecture, the high-speed switching fabric connects:",
    "options": [
      "A. The transport layer to the network layer",
      "B. Input ports to output ports internally",
      "C. The router\u00e2\u20ac\u2122s CPU directly to the Internet",
      "D. MAC addresses to IP addresses"
    ],
    "answer": 1,
    "explanation": "The switching fabric is the internal router component that transfers packets from input ports to output ports. It does not handle MAC-IP mappings or external CPU connections in that sense."
  },
  {
    "question": "60. Which of the following is not a function of an output port in a router?",
    "options": [
      "A. Buffering packets before transmitting to the outgoing link",
      "B. Updating the routing table based on received updates",
      "C. Scheduling (deciding which queued packet to send next)",
      "D. Sending frames over the link-layer protocol"
    ],
    "answer": 1,
    "explanation": "Updating the routing table is a control-plane function typically handled by the routing processor. Output ports handle buffering, scheduling, and link-layer transmission tasks."
  },
  {
    "question": "61. In the context of buffer management, tail drop means:",
    "options": [
      "A. Dropping the smallest-sized packet in the queue",
      "B. Dropping the incoming packet when the buffer is full",
      "C. Dropping the earliest arrived packet in the queue",
      "D. Dropping a random packet in the queue to avoid bias"
    ],
    "answer": 1,
    "explanation": "Tail drop discards the newly arriving packet when the buffer has no free space. Early-arrived or random packet drops are different policies (drop-front, random early detection, etc.)."
  },
  {
    "question": "62. Round Robin (RR) scheduling at an output queue entails:",
    "options": [
      "A. Sending packets strictly in arrival order",
      "B. Serving the queue of each traffic class in turn, one packet per class if available",
      "C. Dropping all lower-priority packets on arrival",
      "D. Serving all packets from the highest priority class until empty"
    ],
    "answer": 1,
    "explanation": "Round Robin rotates between traffic classes, sending one packet from each class\u00e2\u20ac\u2122s queue in sequence if available. The other options describe different scheduling or dropping behaviors."
  },
  {
    "question": "63. In Weighted Fair Queuing (WFQ), each traffic class is assigned a weight. This means:",
    "options": [
      "A. All classes get exactly the same throughput",
      "B. Classes with higher weights get a larger share of the outgoing link\u00e2\u20ac\u2122s bandwidth",
      "C. Lower-weighted classes are completely starved of bandwidth",
      "D. Queue management is disabled"
    ],
    "answer": 1,
    "explanation": "Weighted Fair Queuing allocates bandwidth proportionally to the configured weights. It doesn\u00e2\u20ac\u2122t starve lower-weight classes entirely, unless weights are set extremely low."
  },
  {
    "question": "64. A key motivation for software-defined networking (SDN) is to:",
    "options": [
      "A. Put all forwarding intelligence in the data plane only",
      "B. Remove all middleboxes from the network",
      "C. Separate the control plane (global routing decisions) from the data plane (per-packet forwarding)",
      "D. Use 32-bit IP addressing with strict classful rules"
    ],
    "answer": 2,
    "explanation": "SDN\u00e2\u20ac\u2122s main idea is to have a (logically) centralized control plane controlling distributed data-plane devices. This does not remove all middleboxes or revert to classful IP addressing."
  },
  {
    "question": "65. The OpenFlow abstraction of match plus action implies that:",
    "options": [
      "A. Routers process packets only based on destination IP",
      "B. A router (or switch) can match on multiple header fields and perform various actions like drop, forward, or modify",
      "C. TCP acknowledges are used to define new flows",
      "D. The control plane only uses BGP for routing decisions"
    ],
    "answer": 1,
    "explanation": "OpenFlow extends beyond destination-based forwarding: any set of header fields can be matched, and the action can be forward, drop, modify, etc. It does not rely solely on destination IP or BGP."
  },
  {
    "question": "66. In generalized forwarding, a flow table rule might match on:",
    "options": [
      "A. Only the IP destination prefix",
      "B. Any combination of header fields across Ethernet, IP, and TCP/UDP layers",
      "C. The MAC address of the switch CPU",
      "D. The queue length at the output port"
    ],
    "answer": 1,
    "explanation": "Generalized forwarding can match any fields in the link (Ethernet), network (IP), or transport (TCP/UDP) headers, not just the destination prefix or internal CPU MAC addresses."
  },
  {
    "question": "67. A middlebox is defined as a box that:",
    "options": [
      "A. Forwards IP packets strictly along the shortest path",
      "B. Implements additional services besides the normal IP forwarding function",
      "C. Replaces DNS lookups with direct IP access",
      "D. Always enforces guaranteed delivery"
    ],
    "answer": 1,
    "explanation": "RFC 3234 defines a middlebox as any intermediary device providing functions beyond standard IP forwarding. That can include NAT, firewall, proxy, load balancer, etc."
  },
  {
    "question": "68. Which of the following is not typically a middlebox function?",
    "options": [
      "A. NAT for address translation",
      "B. Firewall filtering based on packet headers",
      "C. Caching and content adaptation",
      "D. Physical layer encoding of bits"
    ],
    "answer": 3,
    "explanation": "Middleboxes operate at or above the network layer, providing NAT, firewalling, or caching. Physical layer bit encoding is not a middlebox function but a link-layer/physical-layer concern."
  },
  {
    "question": "69. One of the criticisms of NAT from a pure architectural standpoint is that it:",
    "options": [
      "A. Doesn\u00e2\u20ac\u2122t work for any IPv4 traffic",
      "B. Violates the end-to-end principle by modifying port/address information in transit",
      "C. Provides universal addressability for all hosts inside the NAT",
      "D. Increases the size of IP headers"
    ],
    "answer": 1,
    "explanation": "NAT changes source IP/port in transit, breaking the end-to-end principle that the network layer should be transparent to endpoints. NAT does work for IPv4, does not provide universal addressability, and does not typically enlarge IP headers."
  },
  {
    "question": "70. Which best describes an IP router\u00e2\u20ac\u2122s longest prefix matching?",
    "options": [
      "A. It searches for the route with the smallest possible netmask",
      "B. It picks the matching route with the highest prefix length (most specific) for the destination",
      "C. It discards the packet if multiple routes match",
      "D. It performs a random pick among all matching routes"
    ],
    "answer": 1,
    "explanation": "Longest prefix matching chooses the most specific route. If multiple prefixes match a destination, the route with the greatest prefix length is used, not a random choice or a smaller netmask."
  },
  {
    "question": "71. In a router using crossbar switching, multiple packet transfers can occur simultaneously if:",
    "options": [
      "A. They all have the same output port",
      "B. They have distinct input ports but share the same link",
      "C. They do not attempt to use the same input or output port at the same time",
      "D. They exceed the router\u00e2\u20ac\u2122s maximum throughput"
    ],
    "answer": 2,
    "explanation": "Crossbar allows parallel transfers as long as no two flows contend for the same input or output in that timeslot. If they share the same output, they must be serialized."
  },
  {
    "question": "72. Which statement correctly characterizes the difference between a host and a router interface?",
    "options": [
      "A. Only hosts have IP addresses while routers do not",
      "B. Routers typically have multiple interfaces, whereas hosts often have one or two",
      "C. Each router interface has the same IP address",
      "D. Hosts never use default gateways"
    ],
    "answer": 1,
    "explanation": "Routers often connect to multiple networks, having multiple interfaces with distinct addresses. Hosts usually have fewer interfaces (wired, wireless). Routers do have IP addresses on each interface, and hosts can have default gateways."
  },
  {
    "question": "73. IP fragmentation is typically considered undesirable because:",
    "options": [
      "A. It consumes extra bandwidth by duplicating data in each fragment",
      "B. IPv4 cannot handle fragments at all",
      "C. It complicates reassembly at intermediate routers",
      "D. It can reduce overall efficiency and lead to performance overhead"
    ],
    "answer": 3,
    "explanation": "Fragmentation requires extra processing, overhead, and can cause issues if fragments are lost. IPv4 can handle fragments, but reassembly is done at endpoints. There\u00e2\u20ac\u2122s no duplication of data, just overhead in headers."
  },
  {
    "question": "74. When an organization changes ISPs, which feature of hierarchical addressing allows simpler reconfiguration of addresses?",
    "options": [
      "A. NAT ensures the internal subnet doesn\u00e2\u20ac\u2122t have to be renumbered externally",
      "B. DNS caching makes all addresses permanent",
      "C. BGP prevents any route updates from being propagated",
      "D. Using classful addressing like Class A or Class B"
    ],
    "answer": 0,
    "explanation": "NAT decouples internal private addresses from a single public address block, simplifying changes when changing ISPs. BGP route updates do propagate changes, and classful addressing is outdated."
  },
  {
    "question": "75. A main difference between IPv6 and IPv4 is that IPv6:",
    "options": [
      "A. Eliminates the need for a network layer checksum",
      "B. Has the same header format but bigger addresses",
      "C. Prohibits extension headers",
      "D. Only supports manual IP configuration"
    ],
    "answer": 0,
    "explanation": "IPv6 does not include a header checksum to simplify processing. While addresses are bigger, the header format is also changed (not identical), extension headers are allowed, and it supports auto-configuration (SLAAC)."
  },
  {
    "question": "76. In the context of SDN, the control plane being logically centralized means:",
    "options": [
      "A. Each device runs its own, independent routing protocol with no coordination",
      "B. A single software component (the controller) can manage forwarding behavior in multiple devices",
      "C. Routers can only forward based on destination IP addresses",
      "D. The controller is physically attached to every router port"
    ],
    "answer": 1,
    "explanation": "SDN centralizes the control logic in one (or a cluster of) controller(s). The routers/switches run simpler data-plane functions and rely on the controller for consistent global decisions. Option A is the opposite of SDN\u00e2\u20ac\u2122s approach."
  },
  {
    "question": "77. Why do some middleboxes, like NAT or firewall, break the end-to-end principle?",
    "options": [
      "A. They rewrite or inspect headers, introducing stateful processing in the network",
      "B. They always forward packets without modifications",
      "C. They never store any connection-related information",
      "D. They strictly implement a transparent bridging function"
    ],
    "answer": 0,
    "explanation": "Middleboxes often modify or inspect transport-layer headers, maintaining state, thus violating pure end-to-end transparency. The other options do not typically break the end-to-end argument."
  },
  {
    "question": "78. A network providing best-effort service offers no guarantee of:",
    "options": [
      "A. IP addressing correctness",
      "B. Packet forwarding based on routing tables",
      "C. Delivery reliability, bounded delay, or bandwidth",
      "D. Source port usage"
    ],
    "answer": 2,
    "explanation": "Best-effort means no guaranteed delivery reliability, timing constraints, or bandwidth. The network still does forward packets using routing tables, but with no performance guarantees."
  },
  {
    "question": "79. Which best describes a firewall\u00e2\u20ac\u2122s typical position in a corporate network?",
    "options": [
      "A. Placed at every router interface inside the core to authenticate each packet",
      "B. Operating on the end hosts only",
      "C. Located at the network perimeter to filter incoming/outgoing traffic",
      "D. Eliminated entirely in favor of NAT"
    ],
    "answer": 2,
    "explanation": "A firewall typically resides at the boundary between the internal corporate network and external networks, filtering traffic in and out. It is not necessarily placed at every router interface or replaced by NAT."
  },
  {
    "question": "80. In the match+action model for generalized forwarding, a packet may be sent to the controller if:",
    "options": [
      "A. No flow table entry matches the packet header fields",
      "B. It arrives at the same time as another packet",
      "C. The network is in slow start",
      "D. The link layer is using error correction"
    ],
    "answer": 0,
    "explanation": "When a switch does not find a matching rule in the flow table, it can forward the packet (or a copy) to the controller for instructions. Options B, C, and D are unrelated triggers."
  }
]